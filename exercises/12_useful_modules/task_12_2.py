# -*- coding: utf-8 -*-
"""
Задание 12.2


Функция ping_ip_addresses из задания 12.1 принимает только список адресов,
но было бы удобно иметь возможность указывать адреса с помощью диапазона,
например, 192.168.100.1-10.

В этом задании необходимо создать функцию convert_ranges_to_ip_list,
которая конвертирует список IP-адресов в разных форматах в список,
где каждый IP-адрес указан отдельно.

Функция ожидает как аргумент список, в котором содержатся IP-адреса
и/или диапазоны IP-адресов.

Элементы списка могут быть в формате:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Если адрес указан в виде диапазона, надо развернуть диапазон в отдельные
адреса, включая последний адрес диапазона.
Для упрощения задачи, можно считать, что в диапазоне всегда меняется только
последний октет адреса.

Функция возвращает список IP-адресов.

Например, если передать функции convert_ranges_to_ip_list такой список:
['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

Функция должна вернуть такой список:
['8.8.4.4', '1.1.1.1', '1.1.1.2', '1.1.1.3', '172.21.41.128',
 '172.21.41.129', '172.21.41.130', '172.21.41.131', '172.21.41.132']

"""

# answer


def convert_ranges_to_ip_list(value):
    ip_list = []
    for ip in value:
        if not '-' in ip:
            ip_list.append(ip)
        elif ip.count('.') == 3:
            ip = ip.split('.')
            b = ip[3].split('-')
            ip.pop()
            for i in range(int(b[0]), int(b[1]) + 1):
                ip.append(str(i))
                b = '.'.join(ip)
                ip_list.append((b))
                ip.pop()
        elif ip.count('.') == 6:
            ip = ip.split('-')
            start_ip, end_ip = ip[0], ip[1]
            start, end = start_ip.split('.').pop(), end_ip.split('.').pop()
            ip = ip[0].split('.')
            ip.pop()
            for i in range(int(start), int(end) + 1):
                ip.append(str(i))
                b = '.'.join(ip)
                ip_list.append((b))
                ip.pop()
    return ip_list


if __name__ == "__main__":
    list = convert_ranges_to_ip_list(['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132'])
    print(list)
